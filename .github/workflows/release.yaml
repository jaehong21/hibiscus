name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # https://goreleaser.com/ci/actions/#workflow
          fetch-depth: 0 # required for goreleaser

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.0

      - name: Set up Env
        id: setup-env
        run: |
          echo "DATE=$(date -u '+%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "GOVERSION=$(go version | awk '{print $3}')" >> $GITHUB_OUTPUT

          # Check if tag is a release candidate
          if [[ ${{ github.ref_name }} =~ .*-rc\..* ]]; then
            echo "IS_RC=true" >> $GITHUB_OUTPUT
          else
            echo "IS_RC=false" >> $GITHUB_OUTPUT
          fi

      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          # If it's an RC tag, do a dry run
          args: ${{ steps.setup-env.outputs.IS_RC == 'true' && 'release --skip=publish' || 'release --clean' }}
        env:
          # https://goreleaser.com/errors/resource-not-accessible-by-integration/
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          DATE: ${{ steps.setup-env.outputs.DATE }}
          GOVERSION: ${{ steps.setup-env.outputs.GOVERSION }}
